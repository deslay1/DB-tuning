import numpy as np
import matplotlib.pyplot as plt
import os
import config

plt.style.use('fivethirtyeight')


output_importance_path = 'optimizer-output/1_feature_importance.png'
# MANUAL WORK FOR NOW, add the vector from the printed output or log file if that is available.
# instance 1, instance 2, instance 3 - readwrite-ratio: 10/90, 50/50, 90/10
imps = [
    [0.135681964840895, 0.04938281010682532, 0.02216466392568001, 0.025963158673754608, 0.012985602520763412, 0.012552424326845429, 0.0009743238799267961,
        0.3790891677648175, 0.1130446060014296, 0.2444522259290513, 0.0003697043007849122, 0.0014500691120544163, 0.001889278617171676],
    [0.0834566154693668, 0.07086988807162646, 0.03723598751758941, 0.05016996005946036, 0.013130122470113265, 0.02225278424022249, 0.011933185602351295,
        0.34295533143658197, 0.16889271965639352, 0.1825389287044095, 0.014976061812265833, 0.0012939531666693322, 0.00029446179294972995],
    [0.20456759998215124, 0.07335434055588583, 0.007709478816684418, 0.035941969411792174, 0.011259236192475045, 0.059274597274957375, 0.003443734073469177,
        0.36927461095630915, 0.1619684927323215, 0.06638249853741236, 0.0015732833909120833, 0.005235564115602988, 1.4593960026721228e-05]
]
# imps = [
#     [0.12029732118097443, 0.04668639161903948, 0.026640798448042978, 0.07261161123727286, 0.015070488156516302, 0.01756198756993836, 0.00864525450699469,
#         0.4489157809663446, 0.1388029367370333, 0.07107049232606212, 0.0031564098926242313, 0.013401878970432457, 0.017138648388724257],
#     [0.0834566154693668, 0.07086988807162646, 0.03723598751758941, 0.05016996005946036, 0.013130122470113265, 0.02225278424022249, 0.011933185602351295,
#         0.34295533143658197, 0.16889271965639352, 0.1825389287044095, 0.014976061812265833, 0.0012939531666693322, 0.00029446179294972995],
#     [0.20456759998215124, 0.07335434055588583, 0.007709478816684418, 0.035941969411792174, 0.011259236192475045, 0.059274597274957375, 0.003443734073469177,
#         0.36927461095630915, 0.1619684927323215, 0.06638249853741236, 0.0015732833909120833, 0.005235564115602988, 1.4593960026721228e-05]
# ]
threshold = 0.02
colors = ['firebrick', 'forestgreen', 'royalblue']
labels = ['r/w - 10/90', 'r/w - 50/50', 'r/w - 90/10']
parameters = config.INPUT_PARAMETERS

#################### PLOT FEATURE IMPORTANCES ####################
fig, ax = plt.subplots()
width = 0.3
r1 = np.arange(len(parameters))
r2 = [x + width for x in r1]
r3 = [x + width for x in r2]
r = [r1, r2, r3]
for i in range(len(imps)):
    ax.bar(r[i], imps[i], width=width, color=colors[i],
           edgecolor='white', label=labels[i])
# Plot threshold
# ax.plot([0., len(parameters)], [threshold, threshold], "k")
ax.axhline(y=threshold, linewidth=1, color='k',
           label=f'{threshold*100}%-level')

ax.set_ylabel('Importance weight')
ax.set_xticks([t + width for t in range(len(parameters))])
ax.set_xticklabels(parameters, rotation=90)
ax.legend()
fig.savefig(output_importance_path, bbox_inches='tight')
plt.close()
